--For this project, I downloaded Spotify data from Kaggle.
--Then I created a table to insert Spotify data into.

CREATE TABLE BIT_d.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );



--Then I inserted the Spotify Data .csv into the table.
--Next, I explored the data using the following SQL. 
SELECT * FROM Spotifydata;

-- Which song was the most popular and what was the name of the artist?
SELECT track_name, artist_name, popularity
FROM BIT_d.Spotifydata
ORDER BY popularity desc LIMIT 1;


--Which artist had the most songs on this list?
SELECT artist_name, COUNT(artist_name)
FROM BIT_d.Spotifydata
GROUP BY artist_name
ORDER BY count(artist_name) DESC LIMIT 1;

--Which songs where performed by Doja Cat and rank them from least to most popular?
SELECT artist_name, track_name, popularity
FROM BIT_d.Spotifydata
WHERE artist_name= 'Doja Cat'
ORDER BY popularity ASC;

--What is the average danceability, energy, and loudness by artist and track?

SELECT artist_name, track_name, AVG(danceability), AVG(energy), AVG(loudness)
FROM BIT_d.Spotifydata
GROUP BY artist_name, track_name;

--What is the total average popularity and danceability of Dua Lipa's songs on this list? Make sure to round danceability to the nearest 2nd decimal.
SELECT artist_name, AVG(popularity), ROUND(AVG(danceability), 2) AS AVG_danceability
FROM BIT_d.Spotifydata
WHERE artist_name='Dua Lipa'
GROUP BY artist_name;


--Calculate the average popularity for the artists in the Spotify data table. 
--Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.

WITH popularity_avg_CTE AS (SELECT artist_name, AVG(popularity) AS avg_popularity
FROM Spotifydata S GROUP BY artist_name)

SELECT artist_name, avg_popularity, 'Top Star' AS tag
FROM popularity_avg_CTE
WHERE avg_popularity>=90;
